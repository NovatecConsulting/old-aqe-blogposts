buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.2"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.2"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
            "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-redis")
    compile("io.github.microutils:kotlin-logging:${kotlinLoggingVersion}")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testCompile("org.testcontainers:junit-jupiter:${testContainersJunit5Version}")
    testCompile("com.github.kstyrc:embedded-redis:${embeddedRedisVersion}")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
            "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}

springBoot {
    buildInfo()
}

task integrationTest(type: Test) {
    useJUnitPlatform() { includeTags 'integration-test' }
    testLogging { events "skipped", "failed" }
}

tasks.check.dependsOn.remove(test)
tasks.check.dependsOn integrationTest